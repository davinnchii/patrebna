import { bot } from '../bot';
import db from '../../database';
import { IUser, ICollection } from '../../tasks/parseKufar';

export async function commandTrackPackages(
  users: ICollection<IUser>,
  usersIds: string[],
): Promise<void> {
  bot.onText(/\/track_packages/, async (ctx) => {
    users = await db.getUsers();
    usersIds = users ? Object.keys(users) : [];
    const { id } = ctx.chat;
    if (usersIds.includes(id.toString())) {
      await bot.sendMessage(
        id,
        '–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤–∞—à–µ–π –ø–æ—Å—ã–ª–∫–∏ –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, –ø—Ä–æ—Å—Ç–æ –≤–≤–µ–¥—è —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä. –ù–∞—à –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç –≤–∞–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –ø—Ä–æ–∏–∑–æ–π–¥—É—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –µ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–∏ –≤–æ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏.',
      );

      await bot.sendMessage(id, '‚úÖ –û—Ç–ª–∏—á–Ω–æ, –¥–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å.', {
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: ' üìç –î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä –ï–≤–ø—Ä–æ—á—Ç–∞',
                callback_data: 'addTrack',
              },
            ],
            [{ text: ' ‚óÄ –ù–∞–∑–∞–¥', callback_data: 'back' }],
          ],
        },
      });
    } else {
      bot.sendMessage(
        id,
        'üòü –í—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! –ß—Ç–æ –±—ã –Ω–∞—á–∞—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –±–æ—Ç–æ–º –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É <a>/start</a>',
        { parse_mode: 'HTML' },
      );
    }
  });
}
